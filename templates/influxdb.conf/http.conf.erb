
###
### [http]
###
### Controls how the HTTP endpoints are configured. These are the primary
### mechanism for getting data into and out of InfluxDB.
###

[http]
  # Determines whether HTTP endpoint is enabled.
  enabled = <%= scope.lookupvar("influxdb::http_enabled") %>

  # Determines whether the Flux query endpoint is enabled.
  flux-enabled = <%= scope.lookupvar("influxdb::flux_enabled") %>

  # Determines whether the Flux query logging is enabled.
  flux-log-enabled = <%= scope.lookupvar("influxdb::flux_log_enabled") %>

  # The bind address used by the HTTP service.
  bind-address = "<%= scope.lookupvar("influxdb::bind_address") %>"

  # Determines whether user authentication is enabled over HTTP/HTTPS.
  auth-enabled = <%= scope.lookupvar("influxdb::auth_enabled") %>

  # The default realm sent back when issuing a basic auth challenge.
  realm = "<%= scope.lookupvar("influxdb::realm") %>"

  # Determines whether HTTP request logging is enabled.
  log-enabled = <%= scope.lookupvar("influxdb::log_enabled") %>

  # Determines whether the HTTP write request logs should be suppressed when the log is enabled.
  suppress-write-log = <%= scope.lookupvar("influxdb::suppress_write_log") %>

  # When HTTP request logging is enabled, this option specifies the path where
  # log entries should be written. If unspecified, the default is to write to stderr, which
  # intermingles HTTP logs with internal InfluxDB logging.
  #
  # If influxd is unable to access the specified path, it will log an error and fall back to writing
  # the request log to stderr.
  access-log-path = "<%= scope.lookupvar("influxdb::access_log_path") %>"

  # Filters which requests should be logged. Each filter is of the pattern NNN, NNX, or NXX where N is
  # a number and X is a wildcard for any number. To filter all 5xx responses, use the string 5xx.
  # If multiple filters are used, then only one has to match. The default is to have no filters which
  # will cause every request to be printed.
  access-log-status-filters = <%= scope.lookupvar("influxdb::access_log_status_filters") %>

  # Determines whether detailed write logging is enabled.
  write-tracing = <%= scope.lookupvar("influxdb::write_tracing") %>

  # Determines whether the pprof endpoint is enabled.  This endpoint is used for
  # troubleshooting and monitoring.
  pprof-enabled = <%= scope.lookupvar("influxdb::pprof_enabled") %>

  # Enables authentication on pprof endpoints. Users will need admin permissions
  # to access the pprof endpoints when this setting is enabled. This setting has
  # no effect if either auth-enabled or pprof-enabled are set to false.
  pprof-auth-enabled = <%= scope.lookupvar("influxdb::pprof_auth_enabled") %>

  # Enables a pprof endpoint that binds to localhost:6060 immediately on startup.
  # This is only needed to debug startup issues.
  debug-pprof-enabled = <%= scope.lookupvar("influxdb::debug_pprof_enabled") %>

  # Enables authentication on the /ping, /metrics, and deprecated /status
  # endpoints. This setting has no effect if auth-enabled is set to false.
  ping-auth-enabled = <%= scope.lookupvar("influxdb::ping_auth_enabled") %>

  # Determines whether HTTPS is enabled.
  https-enabled = <%= scope.lookupvar("influxdb::https_enabled") %>

  # The SSL certificate to use when HTTPS is enabled.
  https-certificate = "<%= scope.lookupvar("influxdb::https_certificate") %>"

  # Use a separate private key location.
  https-private-key = "<%= scope.lookupvar("influxdb::https_private_key") %>"

  # The JWT auth shared secret to validate requests using JSON web tokens.
  shared-secret = "<%= scope.lookupvar("influxdb::shared_secret") %>"

  # The default chunk size for result sets that should be chunked.
  max-row-limit = <%= scope.lookupvar("influxdb::max_row_limit") %>

  # The maximum number of HTTP connections that may be open at once.  New connections that
  # would exceed this limit are dropped.  Setting this value to 0 disables the limit.
  max-connection-limit = <%= scope.lookupvar("influxdb::max_connection_limit") %>

  # Enable http service over unix domain socket
  unix-socket-enabled = <%= scope.lookupvar("influxdb::unix_socket_enabled") %>

  # The path of the unix domain socket.
  bind-socket = "<%= scope.lookupvar("influxdb::bind_socket") %>"

  # The maximum size of a client request body, in bytes. Setting this value to 0 disables the limit.
  max-body-size = <%= scope.lookupvar("influxdb::max_body_size") %>

  # The maximum number of writes processed concurrently.
  # Setting this to 0 disables the limit.
  max-concurrent-write-limit = <%= scope.lookupvar("influxdb::max_concurrent_write_limit") %>

  # The maximum number of writes queued for processing.
  # Setting this to 0 disables the limit.
  max-enqueued-write-limit = <%= scope.lookupvar("influxdb::max_enqueued_write_limit") %>

  # The maximum duration for a write to wait in the queue to be processed.
  # Setting this to 0 or setting max-concurrent-write-limit to 0 disables the limit.
  enqueued-write-timeout = <%= scope.lookupvar("influxdb::enqueued_write_timeout") %>
