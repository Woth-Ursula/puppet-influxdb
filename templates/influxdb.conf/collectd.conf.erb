
###
### [collectd]
###
### Controls one or many listeners for collectd data.
###

[[collectd]]
  enabled = <%= scope.lookupvar("influxdb::collectd_enabled") %>
  bind-address = "<%= scope.lookupvar("influxdb::collectd_bind_address") %>"
  database = "<%= scope.lookupvar("influxdb::collectd_database") %>"
  retention-policy = "<%= scope.lookupvar("influxdb::collectd_retention_policy") %>"
  #
  # The collectd service supports either scanning a directory for multiple types
  # db files, or specifying a single db file.
  typesdb = "<%= scope.lookupvar("influxdb::collectd_typesdb") %>"
  #
  security-level = "<%= scope.lookupvar("influxdb::collectd_security_level") %>"
  auth-file = "<%= scope.lookupvar("influxdb::collectd_auth_file") %>"

  # These next lines control how batching works. You should have this enabled
  # otherwise you could get dropped metrics or poor performance. Batching
  # will buffer points in memory if you have many coming in.

  # Flush if this many points get buffered
  batch-size = <%= scope.lookupvar("influxdb::collectd_batch_size") %>

  # Number of batches that may be pending in memory
  batch-pending = <%= scope.lookupvar("influxdb::collectd_batch_pending") %>

  # Flush at least this often even if we haven't hit buffer limit
  batch-timeout = "<%= scope.lookupvar("influxdb::collectd_batch_timeout") %>"

  # UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.
  read-buffer = <%= scope.lookupvar("influxdb::collectd_read_buffer") %>

  # Multi-value plugins can be handled two ways.
  # "split" will parse and store the multi-value plugin data into separate measurements
  # "join" will parse and store the multi-value plugin as a single multi-value measurement.
  # "split" is the default behavior for backward compatibility with previous versions of influxdb.
  parse-multivalue-plugin = "<%= scope.lookupvar("influxdb::parse_multivalue_plugin") %>"
